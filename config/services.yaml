# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    env(LEANCLOUD_APP_MASTER_KEY): ~
    env(LEANCLOUD_REGION): ~
    env(LEANCLOUD_API_SERVER): ~
    env(LEANCLOUD_SESSION_TOKEN): ~
    env(LEANCLOUD_APP_ENV): ~
    env(APP_IMAGE_ORIGIN): ~
    env(APP_VIDEO_ORIGIN): ~
    env(GEO_REDIRECT_DESTINATION): ~
    env(IPDB_PATH): ~
    env(MMDB_PATH): ~
    app.image_origin: '%env(APP_IMAGE_ORIGIN)%'
    app.video_origin: '%env(APP_VIDEO_ORIGIN)%'
    geo_redirect.destination: '%env(GEO_REDIRECT_DESTINATION)%'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    App\Repository\RepositoryInterface:
        alias: 'App\Repository\LeanCloudRepository'

    App\LeanCloud:
        arguments:
            - '%env(LEANCLOUD_APP_ID)%'
            - '%env(LEANCLOUD_APP_KEY)%'
            - '%env(LEANCLOUD_APP_MASTER_KEY)%'
            - ~
            - '%env(LEANCLOUD_REGION)%'
            - '%env(LEANCLOUD_API_SERVER)%'
            - ~
            - '%env(LEANCLOUD_SESSION_TOKEN)%'
            - '%env(LEANCLOUD_APP_ENV)%'
            - '%kernel.environment%'
            - '%kernel.debug%'

    ipip\db\Reader:
        arguments:
            - '%env(IPDB_PATH)%'

    MaxMind\Db\Reader:
        arguments:
            - '%env(MMDB_PATH)%'

    App\GeoIP\IpVersionSplitter:
        arguments:
            - '@App\GeoIP\IpdbChecker'
            - '@App\GeoIP\MmdbChecker'

    App\GeoIP\CheckerInterface:
        alias: 'App\GeoIP\IpVersionSplitter'

    doctrine_migrations.diff_command:
        class: 'Doctrine\Bundle\MigrationsBundle\Command\MigrationsDiffDoctrineCommand'
        arguments: ['@App\Repository\DoctrineRepository']
        tags: ['console.command']

    OTPHP\TOTPInterface:
        factory: ['OTPHP\TOTP', 'create']
        arguments: ['%env(TOTP_SECRET)%']

    BohanYang\BingWallpaper\Client:
        class: BohanYang\BingWallpaper\Client
        arguments:
            - 'https://global.bing.com/HPImageArchive.aspx'
            - '@monolog.logger'

#    doctrine_repository.postgres:
#        class: App\Repository\DoctrineRepository
#        arguments:
#            - '@doctrine.dbal.postgres_connection'
#
#    App\Command\ImportDBCommand:
#        $postgres: '@doctrine_repository.postgres'

    App\Collector:
        $repository: '@App\Repository\LeanCloudRepository'

    App\LeanEngine\ClearCache:
        arguments:
            - '%kernel.cache_dir%'
            - '%kernel.environment%'
